<?php

/**
 * @file
 * Contains pria_settings.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function hitsa_settings_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pria_settings module.
    case 'help.page.hitsa_settings':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('HITSA settings module') . '</p>';
      return $output;

    default:
  }
}
/**
 * Implements hook_theme().
 */
function hitsa_settings_theme($existing, $type, $theme, $path) {
  $items = [];
  global $base_path;
  $theme_path = $theme = \Drupal::theme()->getActiveTheme()->getPath();
  $path = $base_path.'/'.$theme_path.'/templates/blocks';
  $items['hitsa_social_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  $items['hitsa_footer_free_text_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  $items['hitsa_important_contacts_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  $items['hitsa_main_contacts_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  $items['hitsa_footer_quick_links_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  $items['hitsa_tos_block'] = [
    'variables' => [
      'data' => []
    ],
    'path' => $path,
  ];
  return $items;
}
/**
 * Implements hook_ENTITY_TYPE_prepare_form() for Nodes.
 */

function hitsa_settings_node_prepare_form(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Form\FormStateInterface $form_state) {
  //galerii lisamisel õppeaasta default väärtuse muutmine
  if ($entity->getType() == 'gallery') {
    if ($operation == 'default') {
      $default_value = 0;
      $today = date('Y-m-d');
      $vid = 'academic_year';
      $terms =\Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid, 0,  NULL, TRUE);
      foreach ($terms as $term) {
        $dates = $term->get('field_date_range')->getValue();
        $start_date = $dates[0]['value'];
        $end_date = $dates[0]['end_value'];
        if ($start_date <= $today AND $end_date >= $today) {
          $default_value = $term->id();
          break;
        }
      }
      $entity->set('field_academic_year', $default_value);
    }
  }
}
