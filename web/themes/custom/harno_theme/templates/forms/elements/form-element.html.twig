{#
/**
 * @file
 * Theme override for a form element.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - errors: (optional) Any errors for this form element, may not be set.
 * - prefix: (optional) The form element prefix, may not be set.
 * - suffix: (optional) The form element suffix, may not be set.
 * - required: The required marker, or empty if the associated form element is
 *   not required.
 * - type: The type of the element.
 * - name: The name of the element.
 * - label: A rendered label element.
 * - label_display: Label display setting. It can have these values:
 *   - before: The label is output before the element. This is the default.
 *     The label includes the #title and the required marker, if #required.
 *   - after: The label is output after the element. For example, this is used
 *     for radio and checkbox #type elements. If the #title is empty but the
 *     field is #required, the label will contain only the required marker.
 *   - invisible: Labels are critical for screen readers to enable them to
 *     properly navigate through forms but can be visually distracting. This
 *     property hides the label for everyone except screen readers.
 *   - attribute: Set the title attribute on the element to create a tooltip but
 *     output no label element. This is supported only for checkboxes and radios
 *     in \Drupal\Core\Render\Element\CompositeFormElementTrait::preRenderCompositeFormElement().
 *     It is used where a visual label is not needed, such as a table of
 *     checkboxes where the row and column provide the context. The tooltip will
 *     include the title and required marker.
 * - description: (optional) A list of description properties containing:
 *    - content: A description of the form element, may not be set.
 *    - attributes: (optional) A list of HTML attributes to apply to the
 *      description content wrapper. Will only be set when description is set.
 * - description_display: Description display setting. It can have these values:
 *   - before: The description is output before the element.
 *   - after: The description is output after the element. This is the default
 *     value.
 *   - invisible: The description is output after the element, hidden visually
 *     but available to screen readers.
 * - disabled: True if the element is disabled.
 * - title_display: Title display setting.
 *
 * @see template_preprocess_form_element()
 */
#}
{% set classes = [
  'js-form-item',
  'form-item',
  'js-form-type-' ~ type|clean_class,
  'form-item-' ~ name|clean_class,
  'js-form-item-' ~ name|clean_class,
  title_display not in ['after', 'before'] ? 'form-no-label',
  disabled == 'disabled' ? 'form-disabled',
  errors ? 'form-item--error',
] %}
{% set description_classes = [
  'description',
  description_display == 'invisible' ? 'visually-hidden',
] %}

{% if (type == "search_api_autocomplete") or (element['#id'] == 'edit-search-type') %}
  {{ children }}
{% elseif type == "checkbox" %}
  {% if "article_type" in element['#name'] %}
    <div class="filters-tags__button">
      <label for="{{ element['#id'] }}">{{ label['#title'] }}</label>
      {{ children }}
      <span class="btn btn-tag">{{ label['#title'] }}</span>
    </div><!--/filters-tags__button-->
  {% else %}
    {% if not element['#webform_element'] %}
      {% if element['#attributes']['checkbox-type'] == 'collect' %}

        <span {{ attributes.addClass('btn-input') }}>
  <label for="{{ element['#id'] }}">{{ label['#title'] }}</label>
  {{ children }}
  <span class="btn btn-tag">{{ label['#title'] }}</span>
</span>
      {% else %}
<div class="custom-control custom-checkbox custom-form-inline" tabindex="0">
        {{ children }}
</div>
      {% endif %}
    {% else %}
      <div {{ attributes.addClass(classes) }}>{{ children }}
        {% if suffix is not empty %}
          <span class="field-suffix">{{ suffix }}</span>
        {% endif %}
        {% if label_display == 'after' %}
          {{ label }}
        {% endif %}
        {% if errors %}
          <div class="form-item--error-message">
            <strong>{{ errors }}</strong>
          </div>
        {% endif %}
        {% if description_display in ['after', 'invisible'] and description.content %}
          <div{{ description.attributes.addClass(description_classes) }}>
            {{ description.content }}
          </div>
        {% endif %}
      </div>

    {% endif %}

  {% endif %}
{% elseif element['#name'] == 'date_start' or element['#name'] == 'date_end' or element['#name']=='gallerySearch' or element['#name'] == 'gallerySearchMobile' or element['#name']=='newsSearch' or element['#name']== 'newsSearchMobile' %}
  <div
    class="form-item {% if element['#name']=='date_start' or element['#name']=='date_end' %}custom-date{% endif %} {% if element['#name'] in ['gallerySearchMobile','gallerySearch','newsSearch','newsSearchMobile'] %} search-input{% endif %}"
    data-plugin="movingLabel">
    <label class="form-label" for="{{ element['#id'] }}">{{ label['#title'] }}</label>
    {{ children }}
  </div>
{% else %}
  {% if element['#webform_element'] %}
    {{ children }}
  {% else %}
    {% if element['#type'] in ['radio'] %}
      {{ children }}
      {% else %}
        {% if element['#date_date_format'] or element['#type']=='webform_time' %}
{#{{ dd(element) }}#}
{% if element['#date_date_format'] %}
<div{{ attributes.addClass(classes).addClass('custom-date') }}>

{% elseif element['#type']=='webform_time' %}
<div{{ attributes.addClass(classes).addClass('custom-time') }}>
{% else %}
        <div{{ attributes.addClass(classes).removeClass('form-item') }}>
          {% endif %}
          {% else %}
          <div{{ attributes.addClass(classes) }}>
        {% endif %}
          {% if label_display in ['before', 'invisible'] %}
            {# {{ label }} #}
          {% endif %}
          {% if prefix is not empty %}
            <span class="field-prefix">{{ prefix }}</span>
          {% endif %}
          {% if description_display == 'before' and description.content %}
            <div{{ description.attributes }}>
              {{ description.content }}
            </div>
          {% endif %}
          {{ children }}
          {% if suffix is not empty %}
            <span class="field-suffix">{{ suffix }}</span>
          {% endif %}
          {% if label_display == 'after' %}
            {{ label }}
          {% endif %}
          {% if errors %}
            <div class="form-item--error-message">
              {{ errors }}
            </div>
          {% endif %}
          {% if description_display in ['after', 'invisible'] and description.content %}
            <div{{ description.attributes.addClass(description_classes) }}>
              {{ description.content }}
            </div>
          {% endif %}
        </div>
    {% endif %}

  {% endif %}

{% endif %}
